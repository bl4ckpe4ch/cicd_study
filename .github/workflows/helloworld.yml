# This is a basic workflow to help you get started with Actions

# name 字段是 work­flow 的名称。若忽略此字段，则默认会设置为 work­flow 文件名。
name: CICD-helloworld 

# on 字段指定 work­flow 的触发条件，通常是某些事件，比如示例中的触发事件是 push，即在代码 push 到仓库后被触发。on 字段也可以是事件的数组，多种事件触发，比如在 push 或 pull_request 时触发：
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# 当有多个任务时，可以指定任务的依赖关系，即运行顺序，否则是同时运行。
jobs:
  # This workflow contains a single job called "first_job"
  first_job:
    name: My first job
    # runs-on 字段指定任务运行所需要的虚拟服务器环境，是必填字段
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # name：步骤名称。
      # uses：该步骤引用的action或 Docker 镜像。
      # run：该步骤运行的 bash 命令。
      # env：该步骤所需的环境变量。 
      # 其中 uses 和 run 是必填字段，每个步骤只能有其一。同样名称也是可以忽略的。
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          MY_VAR: Hello World!
          MY_NAME: "blackpeach"
        run: |
          echo my name is $MY_NAME
          echo $MY_VAR
          echo Add other actions to build,
          echo test, and deploy your project.
  second_job:
    name: My second job
    runs-on: ubuntu-latest
    needs: [ "first_job" ]
    steps:
      # 创建Python环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install fastapi uvicorn
      # 添加测试步骤 (如果有)
      - name: Run tests
        run: |
          uvicorn main:app --reload
      # 添加部署步骤
      - name: Deploy
        run: |
          echo 1
